name: Tests

on: [push, pull_request]

jobs:

  python:
    strategy:
      matrix:
        python: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', 'pypy-3.6', 'pypy-3.7', 'pypy-3.8', 'pypy-3.9']
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install gettext gir1.2-gtk-3.0 libgirepository1.0-dev
          python -m pip install -e ".[test]"

      - name: Flake8 linter
        run: python -m flake8

      - name: Pylint linter
        run: python -m pylint pynicotine test

      - name: Integration and unit tests
        run: xvfb-run python -m unittest -v

  ubuntu-debian:
    strategy:
      matrix:
        container: ['debian:bookworm', 'ubuntu:jammy', 'ubuntu:focal']
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install autopkgtest dependencies
        run: |
          apt update
          apt -y install autopkgtest

      - name: Run autopkgtest
        run: autopkgtest . -- null

  fedora-rocky:
    strategy:
      matrix:
        container: ['fedora:rawhide', 'rockylinux:8']
        gtk: [3, 4]
        exclude:
          - container: 'rockylinux:8'
            gtk: 4
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      GSK_RENDERER: cairo
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: dnf -y install gettext gtk${{ matrix.gtk }} python3 python3-gobject util-linux xorg-x11-server-Xvfb

      - name: Install dependencies (Fedora)
        if: matrix.container == 'fedora:rawhide'
        run: dnf -y install pylint python3-flake8

      - name: Install dependencies (Rocky Linux)
        if: matrix.container == 'rockylinux:8'
        run: |
          dnf -y install gcc python3-devel python3-pip
          python3 -m pip install -e ".[test]"

      - name: Flake8 linter
        run: python3 -m flake8

      - name: Pylint linter
        run: python3 -m pylint pynicotine test

      - name: Integration and unit tests
        run: xvfb-run python3 -m unittest -v

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        gtk: [3, 4]
    defaults:
      run:
        shell: msys2 {0}
    env:
      ARCH: x86_64
      NICOTINE_GTK_VERSION: ${{ matrix.gtk }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          release: false
          install: >-
            mingw-w64-${{ env.ARCH }}-gettext
            mingw-w64-${{ env.ARCH }}-gtk${{ matrix.gtk }}
            mingw-w64-${{ env.ARCH }}-python-chardet
            mingw-w64-${{ env.ARCH }}-python-cx-freeze
            mingw-w64-${{ env.ARCH }}-python-flake8
            mingw-w64-${{ env.ARCH }}-python-pip
            mingw-w64-${{ env.ARCH }}-python-pylint
            mingw-w64-${{ env.ARCH }}-python-gobject

      - name: Install additional dependencies
        run: python3 packaging/windows/dependencies.py

      - name: Flake8 linter
        run: python3 -m flake8

      - name: Pylint linter
        run: python3 -m pylint pynicotine test

      - name: Integration and unit tests
        run: python3 -m unittest -v

  macos:
    runs-on: macos-11
    strategy:
      matrix:
        gtk: [3, 4]
    env:
      NICOTINE_GTK_VERSION: ${{ matrix.gtk }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set system language
        run: defaults write NSGlobalDomain AppleLanguages "(en-US)"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Install dependencies
        run: python packaging/macos/dependencies.py

      - name: Flake8 linter
        run: python -m flake8

      - name: Pylint linter
        run: python -m pylint pynicotine test

      - name: Integration and unit tests
        run: python -m unittest -v
