name: Tests

on: [push, pull_request]

jobs:

  ubuntu:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        python: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', 'pypy-3.6', 'pypy-3.7', 'pypy-3.8', 'pypy-3.9']
        gtk: [3, 4]
        exclude:
          - os: ubuntu-20.04
            gtk: 4
          - os: ubuntu-22.04
            gtk: 3
          - os: ubuntu-22.04
            python: '3.6'
    runs-on: ${{ matrix.os }}
    env:
      NICOTINE_GTK_VERSION: ${{ matrix.gtk }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install gettext gir1.2-gtk-${{ matrix.gtk }}.0 libgirepository1.0-dev
          python -m pip install -e ".[test]"

      - name: Flake8 linter
        run: python -m flake8

      - name: Pylint linter
        run: python -m pylint pynicotine test

      - name: Integration and unit tests
        run: xvfb-run python -m unittest -v

  ubuntu-dep8:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install autopkgtest dependencies
        run: |
          sudo apt update
          sudo apt -y install autopkgtest

      - name: Run autopkgtest
        run: sudo autopkgtest . -- null

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - { msystem: MINGW64, arch: x86_64, gtk: 3 }
          - { msystem: MINGW64, arch: x86_64, gtk: 4 }
    defaults:
      run:
        shell: msys2 {0}
    env:
      ARCH: ${{ matrix.arch }}
      NICOTINE_GTK_VERSION: ${{ matrix.gtk }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          release: false
          install: >-
            mingw-w64-${{ matrix.arch }}-gettext
            mingw-w64-${{ matrix.arch }}-gtk${{ matrix.gtk }}
            mingw-w64-${{ matrix.arch }}-python-chardet
            mingw-w64-${{ matrix.arch }}-python-cx-freeze
            mingw-w64-${{ matrix.arch }}-python-flake8
            mingw-w64-${{ matrix.arch }}-python-pip
            mingw-w64-${{ matrix.arch }}-python-pylint
            mingw-w64-${{ matrix.arch }}-python-gobject

      - name: Install additional dependencies
        run: python3 packaging/windows/dependencies.py

      - name: Flake8 linter
        run: python3 -m flake8

      - name: Pylint linter
        run: python3 -m pylint pynicotine test

      - name: Integration and unit tests
        run: python3 -m unittest -v

  macos:
    runs-on: macos-10.15
    strategy:
      matrix:
        gtk: [3, 4]
    env:
      NICOTINE_GTK_VERSION: ${{ matrix.gtk }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set system language
        run: defaults write NSGlobalDomain AppleLanguages "(en-US)"

      - name: Install dependencies
        run: |
          brew install python
          python3 packaging/macos/dependencies_core.py

      - name: Flake8 linter
        run: flake8

      - name: Pylint linter
        run: pylint pynicotine test

      - name: Integration and unit tests
        run: python3 -m unittest -v
