name: Packaging

on: [push, pull_request]

jobs:

  debian:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install python3-build
          sudo apt build-dep .

      - name: Build Debian package
        run: |
          python3 -m build --sdist --no-isolation
          mk-origtargz dist/nicotine-plus-*.tar.gz
          debuild -sa -us -uc

      - name: Prepare artifacts
        run: |
          mkdir build/package/
          cp -Lr ../nicotine_* build/package/

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          path: build/package/

  flatpak:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64]
    container:
      image: bilelmoussaoui/flatpak-github-actions:gnome-46
      options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Flatpak package
        uses: flatpak/flatpak-github-actions/flatpak-builder@v6
        with:
          bundle: flatpak-package.flatpak
          manifest-path: packaging/flatpak/org.nicotine_plus.Nicotine.json
          cache-key: flatpak-builder-${{ github.sha }}

  snap:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Snap package
        uses: snapcore/action-build@v1
        id: build-snap

      - name: Install Snap package
        run: sudo snap install --dangerous ${{ steps.build-snap.outputs.snap }}

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snap-${{ matrix.arch }}-package
          path: ${{ steps.build-snap.outputs.snap }}

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86_64]
    defaults:
      run:
        shell: msys2 {0}
    env:
      NICOTINE_GTK_VERSION: 4
      NICOTINE_LIBADWAITA: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          release: false
          update: true
          install: >-
            mingw-w64-${{ matrix.arch }}-ca-certificates
            mingw-w64-${{ matrix.arch }}-gettext-tools
            mingw-w64-${{ matrix.arch }}-gtk${{ env.NICOTINE_GTK_VERSION }}
            mingw-w64-${{ matrix.arch }}-libadwaita
            mingw-w64-${{ matrix.arch }}-python-build
            mingw-w64-${{ matrix.arch }}-python-cx-freeze
            mingw-w64-${{ matrix.arch }}-python-pycodestyle
            mingw-w64-${{ matrix.arch }}-python-pylint
            mingw-w64-${{ matrix.arch }}-python-gobject

      - name: Install additional dependencies
        run: python3 packaging/windows/dependencies.py

      - name: Freeze application
        run: python3 packaging/windows/setup.py bdist_msi

      - name: Archive installer artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}-installer
          path: packaging/windows/build/*.msi

      - name: Archive package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}-package
          path: packaging/windows/build/package

  macos:
    strategy:
      matrix:
        include:
          - arch: x86_64
            platform: macos-12
          - arch: arm64
            platform: macos-14
    runs-on: ${{ matrix.platform }}
    env:
      NICOTINE_GTK_VERSION: 4
      NICOTINE_LIBADWAITA: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set system language
        run: defaults write NSGlobalDomain AppleLanguages "(en-US)"

      - name: Create Python virtual environment
        run: |
          brew uninstall --ignore-dependencies python@3.12
          brew install --overwrite python@3.12
          python3.12 -m venv venv

      - name: Install build dependencies
        run: |
          brew update
          venv/bin/python3 packaging/macos/dependencies.py

      - name: Freeze application
        run: venv/bin/python3 packaging/macos/setup.py bdist_dmg

      - name: Archive installer artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}-installer
          path: packaging/macos/build/*.dmg
