name: Packaging

on: [push, pull_request]

jobs:

  debian:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt build-dep .

      - name: Build Debian package
        run: |
          python3 setup.py sdist
          mk-origtargz dist/nicotine-plus-*.tar.gz
          debuild -sa -us -uc

      - name: Prepare artifacts
        run: |
          mkdir build/package/
          cp -Lr ../nicotine_* build/package/

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: debian-package
          path: build/package/

  flatpak:
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:gnome-44
      options: --privileged
    steps:
    - uses: actions/checkout@v3
    - uses: flatpak/flatpak-github-actions/flatpak-builder@v6
      with:
        bundle: flatpak-package.flatpak
        manifest-path: packaging/flatpak/org.nicotine_plus.Nicotine.json
        cache-key: flatpak-builder-${{ github.sha }}

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - { msystem: MINGW64, arch: x86_64, gtk: 4, libadwaita: 1 }
          - { msystem: MINGW32, arch: i686, gtk: 4, libadwaita: 1 }
    defaults:
      run:
        shell: msys2 {0}
    env:
      ARCH: ${{ matrix.arch }}
      NICOTINE_GTK_VERSION: ${{ matrix.gtk }}
      NICOTINE_LIBADWAITA: ${{ matrix.libadwaita }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          release: false
          install: >-
            mingw-w64-${{ matrix.arch }}-gettext
            mingw-w64-${{ matrix.arch }}-gtk${{ matrix.gtk }}
            mingw-w64-${{ matrix.arch }}-python-chardet
            mingw-w64-${{ matrix.arch }}-python-cx-freeze
            mingw-w64-${{ matrix.arch }}-python-flake8
            mingw-w64-${{ matrix.arch }}-python-pip
            mingw-w64-${{ matrix.arch }}-python-pylint
            mingw-w64-${{ matrix.arch }}-python-gobject

      - name: Install additional dependencies
        run: python3 packaging/windows/dependencies.py

      - name: Freeze application
        run: python3 packaging/windows/setup.py bdist_msi

      - name: Archive installer artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-${{ matrix.arch }}-installer
          path: packaging/windows/build/*.msi

      - name: Archive package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-${{ matrix.arch }}-package
          path: packaging/windows/build/package

  macos:
    runs-on: macos-11
    env:
      NICOTINE_GTK_VERSION: 4
      NICOTINE_LIBADWAITA: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set system language
        run: defaults write NSGlobalDomain AppleLanguages "(en-US)"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Install build dependencies
        run: python packaging/macos/dependencies.py

      - name: Freeze application
        run: python packaging/macos/setup.py bdist_dmg

      - name: Archive installer artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-installer
          path: packaging/macos/build/*.dmg
